# risc_cisc.asm

GDB:

$ gdb risc_cisc
(gdb) list
1       section .data
2
3       section .text
4       global _start
5       _start:
6         mov rax, 0x1122334455667788
7         mov eax, 0x42
8
9         mov rax, 0x1122334455667788
10        mov ax, 0x9999
(gdb) b 5
Breakpoint 1 at 0x401000: file risc_cisc.asm, line 6.
(gdb) r
Starting program: /mnt/d/workspace/learning-system-programming/codes/low-level/ch03/risc_cisc 

Breakpoint 1, _start () at risc_cisc.asm:6
6         mov rax, 0x1122334455667788
(gdb) print/x $rax
$1 = 0x0
(gdb) n
7         mov eax, 0x42
(gdb) print/x $rax
$2 = 0x1122334455667788
(gdb) n
9         mov rax, 0x1122334455667788
(gdb) print/x $rax
$3 = 0x42
(gdb) n
10        mov ax, 0x9999
(gdb) print/x $rax
$4 = 0x1122334455667788
(gdb) n
12        mov rax, 0x1122334455667788
(gdb) print/x $rax
$5 = 0x1122334455669999
(gdb) n
13        xor eax, eax
(gdb) print/x $rax
$6 = 0x1122334455667788
(gdb) n
15        mov rax, 60         ; system call: exit
(gdb) print/x $rax
$7 = 0x0

LLDB:

âœ— lldb risc_cisc 
(lldb) target create "risc_cisc"
Current executable set to '/Users/zhang/workspace/github/learning-system-programming/codes/low-level/ch03/risc_cisc' (x86_64).
(lldb) br set -f risc_cisc.asm -l 7
Breakpoint 2: where = risc_cisc`start, address = 0x0000000100003f85
(lldb) r
Process 91945 launched: '/Users/zhang/workspace/github/learning-system-programming/codes/low-level/ch03/risc_cisc' (x86_64)
This version of LLDB has no plugin for the mipsassem language. Inspection of frame variables will be limited.
Process 91945 stopped
* thread #1, queue = 'com.apple.main-thread', stop reason = breakpoint 2.1
    frame #0: 0x0000000100003f85 risc_cisc`start at risc_cisc.asm:8
   5    section .text
   6    global _start
   7    _start:
-> 8      mov rax, 0x1122334455667788
   9      mov eax, 0x42                 ; rax: 0x42
   10  
   11     mov rax, 0x1122334455667788
(lldb) print/x $rax
(unsigned long) $0 = 0x1122334455667788   
(lldb) register read rax
     rax = 0x1122334455667788