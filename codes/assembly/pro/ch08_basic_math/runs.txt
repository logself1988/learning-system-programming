# ex01_add.s

(gdb) b 26
Breakpoint 1 at 0x401035: file ex01_add.s, line 26.
(gdb) r
Starting program: /mnt/d/workspace/learning-system-programming/codes/assembly/pro/ch08_basic_math/ex01_add

Breakpoint 1, _start () at ex01_add.s:26
26          movl $1, %eax
(gdb) print $eax
$1 = 70
(gdb) print $ebx
$2 = 100
(gdb) print $ecx
$3 = 100
(gdb) print $edx
$4 = 200
(gdb) x/d &data
0x402000:       110

# ex01_add2.s

(gdb) print $eax
$1 = -170
(gdb) print $ebx
$2 = -200
(gdb) print $ecx
$3 = 80
(gdb) x/d &data
0x402000:       0

# ex01_add3.s

$ ./ex01_add3
$ echo $?
0

(gdb) n
9           addb %al, %bl
(gdb) info registers
...
eflags         0x202               [ IF ]
...
(gdb) n
10          jc over
(gdb) info registers
...
eflags         0x217               [ CF PF AF IF ]
...

# ex01_add4.s

$ ./ex01_add4
The result is 0
$ echo $?
0

# ex02_adc.s

$ ./ex02_adc
The result is 12984400543

# ex03_sub.s

(gdb) print $eax
$1 = -30
(gdb) x/d &data
0x402000:       70

# ex03_sub2.s

$ ./ex03_sub2
$ echo $?
0

# ex03_sub3.s

$ ./ex03_sub3
The result is 0

# ex04_sbb.s

$ ./ex04_sbb
The result is -1519702687

# ex05_mul.s

$ ./ex05_mul
The result is 52245741648

# ex06_imul.s

(gdb) n
16          imull %ebx, %ecx
(gdb) print $edx
$1 = 0
(gdb) print $ebx
$2 = 10
(gdb) print $ecx
$3 = -35
(gdb) n
18          movl value3, %edx
(gdb) print $ecx
$4 = -350
(gdb) n
19          imull $2, %edx, %eax
(gdb) print $edx
$5 = 400
(gdb) n
21          movl $1, %eax
(gdb) print $eax
$6 = 800

# ex06_imul2.s

$ ./ex06_imul2
$ echo $?
1

# ex07_div.s

$ ./ex07_div
The quotient is 333, and the remainder is 10

$ python
Python 2.7.18 (default, Mar  8 2021, 13:02:45)
[GCC 9.3.0] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> 8335 / 25
333
>>> 8335 % 25
10

# ex08_sal.s

(gdb) n
11          sall %ebx
(gdb) print $ebx
$1 = 10
(gdb) n
13          movb $2, %cl
(gdb) print $ebx
$2 = 20
(gdb) n
14          sall %cl, %ebx
(gdb) print $cl
$3 = 2
(gdb) n
15          sall $2, %ebx
(gdb) print $ebx
$4 = 80
(gdb) n
16          sall value1
(gdb) print $ebx
$5 = 320
(gdb) x/d &value1
0x402000:       25
(gdb) n
17          sall $2, value1
(gdb) x/d &value1
0x402000:       50
(gdb) n
19          movl $1, %eax
(gdb) x/d &value1
0x402000:       200

# ex09_aaa.s

(gdb) x/5xb &value1
0x804b000:      0x05    0x02    0x01    0x08    0x02
(gdb) x/5xb &value2
0x804b005:      0x03    0x03    0x09    0x02    0x05
(gdb) x/6xb &sum
0x804b00c <sum>:        0x08    0x05    0x00    0x01    0x08    0x00

# ex10_das.s

(gdb) x/3xb &value1
0x804b000:      0x25    0x81    0x02
(gdb) x/3xb &value2
0x804b003:      0x33    0x29    0x05
(gdb) x/4xb &result
0x804b008 <result>:     0x08    0x48    0x02    0x00